package net.superliujian.mockgps;

import java.io.File;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.UUID;

import net.superliujian.mockgps.model.Preferences;
import net.superliujian.mockgps.utils.ActivityUtils;
import net.superliujian.mockgps.utils.HttpHelper;

import org.json.JSONObject;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.telephony.TelephonyManager;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;





public class SplashActivity extends Activity{
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		this.setContentView(R.layout.activity_splash);
		
		
		

		String uuid=this.getUniqueId();
		String regCode=Preferences.getRegKey();
		
		EditText tv_uuid=(EditText)this.findViewById(R.id.tv_uuid);
		tv_uuid.setText(uuid);
		
		EditText tv_reg_code=(EditText)this.findViewById(R.id.et_reg_code);
		tv_reg_code.setText(regCode);
		
		
		Button btn_login=(Button)this.findViewById(R.id.splash_btn_login);
		btn_login.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				String regCode=((EditText)findViewById(R.id.et_reg_code)).getText().toString();
				String uuid=((EditText)findViewById(R.id.tv_uuid)).getText().toString();
				if(authentication(uuid,regCode)){
					Preferences.putRegKey(regCode);
					Intent intent=new Intent(SplashActivity.this,MockGPSActivity.class);
					SplashActivity.this.startActivity(intent);
					finish();
				}else{
					Toast.makeText(SplashActivity.this, "登陆失败", 0).show();
				}
			}
		});
		Button btn_exit=(Button)this.findViewById(R.id.splash_btn_exit);
		btn_exit.setOnClickListener(new View.OnClickListener() {
			
			@Override
			public void onClick(View v) {
				// TODO Auto-generated method stub
				ActivityUtils.exit();
			}
		});
		ActivityUtils.addActivity(this);
		regCode="authenticated";
		if(regCode!=""&&authentication(uuid,regCode))
		{
			Intent intent=new Intent(SplashActivity.this,MockGPSActivity.class);
			SplashActivity.this.startActivity(intent);
			finish();
		}
	}
	
	
	@Override
	protected void onStart() {
		// TODO Auto-generated method stub

		/*
		try {
			Date   curDate   =   new   Date(System.currentTimeMillis());//��ȡ��ǰʱ��   
			Log.v("Date", curDate.toLocaleString());
			SimpleDateFormat df = new SimpleDateFormat("yyyy/MM/dd hh:mm:ss"); 
			Date expiresDate = df.parse("2012/10/20 12:00:00");
			Log.v("Date", expiresDate.toLocaleString());
			if(curDate.compareTo(expiresDate)>0){
				Log.v("Date", "exit");
				ActivityUtils.exit();
			}
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		*/
		
		super.onStart();
	}
	
	
	@Override
	protected void onDestroy() {
		// TODO Auto-generated method stub
		ActivityUtils.removeActivity(this);
		super.onDestroy();
	}
	
	public boolean authentication(String uuid,String regCode){
		return true;
		/*
		String url=this.getResources().getString(R.string.validation_url);
		url=url+"?uuid="+uuid+"&key="+regCode;
		String error="";
		boolean success=false;
		HttpHelper helper=new HttpHelper();
		try{
			String rsp=helper.performGet(url);
			JSONObject obj=new JSONObject(rsp);
			success=obj.getBoolean("success");
			error=obj.getString("error");
		}catch(Exception e){
			success=false;
			error="网络错误";
		}
		if(!success)
		{
			Toast.makeText(this, error, 0).show();
		}
		return success;
		*/
		
	}
	public  String getUniqueId(){
		final TelephonyManager tm = (TelephonyManager)getSystemService(Context.TELEPHONY_SERVICE);
		final String tmDevice, tmSerial, androidId;
		tmDevice = "" + tm.getDeviceId();
		tmSerial = "" + tm.getSimSerialNumber();
		androidId = "" + android.provider.Settings.Secure.getString(getContentResolver(), android.provider.Settings.Secure.ANDROID_ID);
		UUID deviceUuid = new UUID(androidId.hashCode(), ((long)tmDevice.hashCode() <<16) | tmSerial.hashCode());
		String uniqueId = deviceUuid.toString();
		return uniqueId;

	}
	
}